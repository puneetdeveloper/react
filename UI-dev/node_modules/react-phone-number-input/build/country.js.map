{"version":3,"sources":["../source/country.js"],"names":["country","country_from_locale","country_phone_prefixes","country_codes","phone","slice","length","country_phone_prefix","locale","last_dash_index","lastIndexOf"],"mappings":"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","file":"country.js","sourcesContent":["import { starts_with } from './helpers'\n\n// If you notice, country phone codes are inherently unambiguous,\n// i.e. for a given sequence of digits only one country phone code\n// can match. E.g. there is \"1\" code for USA and Canada, and therefore\n// no other country code starts with \"1\". Next, there is \"7\" code for Russia\n// and Kazakhstan, therefore no other country code starts with \"7\".\n// The same trick applies to two-digit country codes and three-digit country codes.\n\n// https://countrycode.org/\n//\n// data.split('\\n').map(row =>\n// {\n// \tconst digit_index = row.search(/\\d/)\n// \tconst country_name = row.slice(0, digit_index).trim()\n//\n// \trow = row.slice(digit_index)\n//\n// \tconst letter_index = row.search(/[A-z]/)\n// \tconst phone_codes = row.slice(0, letter_index).trim()\n// \t\t.split(', ')\n// \t\t.map(code => code.replace(/[^0-9]/g, ''))\n//\n// \trow = row.slice(letter_index)\n//\n// \tconst parts = row.split(/\\s/)\n//\n// \trow =\n// \t{\n// \t\tcountry      : parts[0],\n// \t\tcountry_3    : parts[2],\n// \t\tcodes        : phone_codes,\n// \t\tcountry_name : country_name\n// \t}\n//\n// \treturn row\n// })\n// .reduce((total, row) =>\n// {\n// \treturn total.concat(row.codes.map(code =>\n// \t({\n// \t\tcode,\n// \t\tcountry      : row.country,\n// \t\tcountry_3    : row.country_3,\n// \t\tcountry_name : row.country_name\n// \t})))\n// },\n// [])\n// .sort((a, b) => b.code - a.code)\n// .map(row => `\\t['${row.code}', '${row.country}', '${row.country_3}'], // ${row.country_name}`)\n// .join('\\n')\n//\nconst country_phone_prefixes =\n[\n\t['441624', 'IM', 'IMN'], // Isle of Man\n\t['441534', 'JE', 'JEY'], // Jersey\n\t['441481', 'GG', 'GGY'], // Guernsey\n\t['1939', 'PR', 'PRI'], // Puerto Rico\n\t['1876', 'JM', 'JAM'], // Jamaica\n\t['1869', 'KN', 'KNA'], // Saint Kitts and Nevis\n\t['1868', 'TT', 'TTO'], // Trinidad and Tobago\n\t['1849', 'DO', 'DOM'], // Dominican Republic\n\t['1829', 'DO', 'DOM'], // Dominican Republic\n\t['1809', 'DO', 'DOM'], // Dominican Republic\n\t['1787', 'PR', 'PRI'], // Puerto Rico\n\t['1784', 'VC', 'VCT'], // Saint Vincent and the Grenadines\n\t['1767', 'DM', 'DMA'], // Dominica\n\t['1758', 'LC', 'LCA'], // Saint Lucia\n\t['1721', 'SX', 'SXM'], // Sint Maarten\n\t['1684', 'AS', 'ASM'], // American Samoa\n\t['1671', 'GU', 'GUM'], // Guam\n\t['1670', 'MP', 'MNP'], // Northern Mariana Islands\n\t['1664', 'MS', 'MSR'], // Montserrat\n\t['1649', 'TC', 'TCA'], // Turks and Caicos Islands\n\t['1473', 'GD', 'GRD'], // Grenada\n\t['1441', 'BM', 'BMU'], // Bermuda\n\t['1345', 'KY', 'CYM'], // Cayman Islands\n\t['1340', 'VI', 'VIR'], // U.S. Virgin Islands\n\t['1284', 'VG', 'VGB'], // British Virgin Islands\n\t['1268', 'AG', 'ATG'], // Antigua and Barbuda\n\t['1264', 'AI', 'AIA'], // Anguilla\n\t['1246', 'BB', 'BRB'], // Barbados\n\t['1242', 'BS', 'BHS'], // Bahamas\n\t['998', 'UZ', 'UZB'], // Uzbekistan\n\t['996', 'KG', 'KGZ'], // Kyrgyzstan\n\t['995', 'GE', 'GEO'], // Georgia\n\t['994', 'AZ', 'AZE'], // Azerbaijan\n\t['993', 'TM', 'TKM'], // Turkmenistan\n\t['992', 'TJ', 'TJK'], // Tajikistan\n\t['977', 'NP', 'NPL'], // Nepal\n\t['976', 'MN', 'MNG'], // Mongolia\n\t['975', 'BT', 'BTN'], // Bhutan\n\t['974', 'QA', 'QAT'], // Qatar\n\t['973', 'BH', 'BHR'], // Bahrain\n\t['972', 'IL', 'ISR'], // Israel\n\t['971', 'AE', 'ARE'], // United Arab Emirates\n\t['970', 'PS', 'PSE'], // Palestine\n\t['968', 'OM', 'OMN'], // Oman\n\t['967', 'YE', 'YEM'], // Yemen\n\t['966', 'SA', 'SAU'], // Saudi Arabia\n\t['965', 'KW', 'KWT'], // Kuwait\n\t['964', 'IQ', 'IRQ'], // Iraq\n\t['963', 'SY', 'SYR'], // Syria\n\t['962', 'JO', 'JOR'], // Jordan\n\t['961', 'LB', 'LBN'], // Lebanon\n\t['960', 'MV', 'MDV'], // Maldives\n\t['886', 'TW', 'TWN'], // Taiwan\n\t['880', 'BD', 'BGD'], // Bangladesh\n\t['856', 'LA', 'LAO'], // Laos\n\t['855', 'KH', 'KHM'], // Cambodia\n\t['853', 'MO', 'MAC'], // Macau\n\t['852', 'HK', 'HKG'], // Hong Kong\n\t['850', 'KP', 'PRK'], // North Korea\n\t['692', 'MH', 'MHL'], // Marshall Islands\n\t['691', 'FM', 'FSM'], // Micronesia\n\t['690', 'TK', 'TKL'], // Tokelau\n\t['689', 'PF', 'PYF'], // French Polynesia\n\t['688', 'TV', 'TUV'], // Tuvalu\n\t['687', 'NC', 'NCL'], // New Caledonia\n\t['686', 'KI', 'KIR'], // Kiribati\n\t['685', 'WS', 'WSM'], // Samoa\n\t['683', 'NU', 'NIU'], // Niue\n\t['682', 'CK', 'COK'], // Cook Islands\n\t['681', 'WF', 'WLF'], // Wallis and Futuna\n\t['680', 'PW', 'PLW'], // Palau\n\t['679', 'FJ', 'FJI'], // Fiji\n\t['678', 'VU', 'VUT'], // Vanuatu\n\t['677', 'SB', 'SLB'], // Solomon Islands\n\t['676', 'TO', 'TON'], // Tonga\n\t['675', 'PG', 'PNG'], // Papua New Guinea\n\t['674', 'NR', 'NRU'], // Nauru\n\t['673', 'BN', 'BRN'], // Brunei\n\t['672', 'AQ', 'ATA'], // Antarctica\n\t['670', 'TL', 'TLS'], // East Timor\n\t['599', 'CW', 'CUW'], // Curacao\n\t['599', 'AN', 'ANT'], // Netherlands Antilles\n\t['598', 'UY', 'URY'], // Uruguay\n\t['597', 'SR', 'SUR'], // Suriname\n\t['595', 'PY', 'PRY'], // Paraguay\n\t['593', 'EC', 'ECU'], // Ecuador\n\t['592', 'GY', 'GUY'], // Guyana\n\t['591', 'BO', 'BOL'], // Bolivia\n\t['590', 'MF', 'MAF'], // Saint Martin\n\t['590', 'BL', 'BLM'], // Saint Barthelemy\n\t['509', 'HT', 'HTI'], // Haiti\n\t['508', 'PM', 'SPM'], // Saint Pierre and Miquelon\n\t['507', 'PA', 'PAN'], // Panama\n\t['506', 'CR', 'CRI'], // Costa Rica\n\t['505', 'NI', 'NIC'], // Nicaragua\n\t['504', 'HN', 'HND'], // Honduras\n\t['503', 'SV', 'SLV'], // El Salvador\n\t['502', 'GT', 'GTM'], // Guatemala\n\t['501', 'BZ', 'BLZ'], // Belize\n\t['500', 'FK', 'FLK'], // Falkland Islands\n\t['423', 'LI', 'LIE'], // Liechtenstein\n\t['421', 'SK', 'SVK'], // Slovakia\n\t['420', 'CZ', 'CZE'], // Czech Republic\n\t['389', 'MK', 'MKD'], // Macedonia\n\t['387', 'BA', 'BIH'], // Bosnia and Herzegovina\n\t['386', 'SI', 'SVN'], // Slovenia\n\t['385', 'HR', 'HRV'], // Croatia\n\t['383', 'XK', 'XKX'], // Kosovo\n\t['382', 'ME', 'MNE'], // Montenegro\n\t['381', 'RS', 'SRB'], // Serbia\n\t['380', 'UA', 'UKR'], // Ukraine\n\t['379', 'VA', 'VAT'], // Vatican\n\t['378', 'SM', 'SMR'], // San Marino\n\t['377', 'MC', 'MCO'], // Monaco\n\t['376', 'AD', 'AND'], // Andorra\n\t['375', 'BY', 'BLR'], // Belarus\n\t['374', 'AM', 'ARM'], // Armenia\n\t['373', 'MD', 'MDA'], // Moldova\n\t['372', 'EE', 'EST'], // Estonia\n\t['371', 'LV', 'LVA'], // Latvia\n\t['370', 'LT', 'LTU'], // Lithuania\n\t['359', 'BG', 'BGR'], // Bulgaria\n\t['358', 'FI', 'FIN'], // Finland\n\t['357', 'CY', 'CYP'], // Cyprus\n\t['356', 'MT', 'MLT'], // Malta\n\t['355', 'AL', 'ALB'], // Albania\n\t['354', 'IS', 'ISL'], // Iceland\n\t['353', 'IE', 'IRL'], // Ireland\n\t['352', 'LU', 'LUX'], // Luxembourg\n\t['351', 'PT', 'PRT'], // Portugal\n\t['350', 'GI', 'GIB'], // Gibraltar\n\t['299', 'GL', 'GRL'], // Greenland\n\t['298', 'FO', 'FRO'], // Faroe Islands\n\t['297', 'AW', 'ABW'], // Aruba\n\t['291', 'ER', 'ERI'], // Eritrea\n\t['290', 'SH', 'SHN'], // Saint Helena\n\t['269', 'KM', 'COM'], // Comoros\n\t['268', 'SZ', 'SWZ'], // Swaziland\n\t['267', 'BW', 'BWA'], // Botswana\n\t['266', 'LS', 'LSO'], // Lesotho\n\t['265', 'MW', 'MWI'], // Malawi\n\t['264', 'NA', 'NAM'], // Namibia\n\t['263', 'ZW', 'ZWE'], // Zimbabwe\n\t['262', 'RE', 'REU'], // Reunion\n\t['262', 'YT', 'MYT'], // Mayotte\n\t['261', 'MG', 'MDG'], // Madagascar\n\t['260', 'ZM', 'ZMB'], // Zambia\n\t['258', 'MZ', 'MOZ'], // Mozambique\n\t['257', 'BI', 'BDI'], // Burundi\n\t['256', 'UG', 'UGA'], // Uganda\n\t['255', 'TZ', 'TZA'], // Tanzania\n\t['254', 'KE', 'KEN'], // Kenya\n\t['253', 'DJ', 'DJI'], // Djibouti\n\t['252', 'SO', 'SOM'], // Somalia\n\t['251', 'ET', 'ETH'], // Ethiopia\n\t['250', 'RW', 'RWA'], // Rwanda\n\t['249', 'SD', 'SDN'], // Sudan\n\t['248', 'SC', 'SYC'], // Seychelles\n\t['246', 'IO', 'IOT'], // British Indian Ocean Territory\n\t['245', 'GW', 'GNB'], // Guinea-Bissau\n\t['244', 'AO', 'AGO'], // Angola\n\t['243', 'CD', 'COD'], // Democratic Republic of the Congo\n\t['242', 'CG', 'COG'], // Republic of the Congo\n\t['241', 'GA', 'GAB'], // Gabon\n\t['240', 'GQ', 'GNQ'], // Equatorial Guinea\n\t['239', 'ST', 'STP'], // Sao Tome and Principe\n\t['238', 'CV', 'CPV'], // Cape Verde\n\t['237', 'CM', 'CMR'], // Cameroon\n\t['236', 'CF', 'CAF'], // Central African Republic\n\t['235', 'TD', 'TCD'], // Chad\n\t['234', 'NG', 'NGA'], // Nigeria\n\t['233', 'GH', 'GHA'], // Ghana\n\t['232', 'SL', 'SLE'], // Sierra Leone\n\t['231', 'LR', 'LBR'], // Liberia\n\t['230', 'MU', 'MUS'], // Mauritius\n\t['229', 'BJ', 'BEN'], // Benin\n\t['228', 'TG', 'TGO'], // Togo\n\t['227', 'NE', 'NER'], // Niger\n\t['226', 'BF', 'BFA'], // Burkina Faso\n\t['225', 'CI', 'CIV'], // Ivory Coast\n\t['224', 'GN', 'GIN'], // Guinea\n\t['223', 'ML', 'MLI'], // Mali\n\t['222', 'MR', 'MRT'], // Mauritania\n\t['221', 'SN', 'SEN'], // Senegal\n\t['220', 'GM', 'GMB'], // Gambia\n\t['218', 'LY', 'LBY'], // Libya\n\t['216', 'TN', 'TUN'], // Tunisia\n\t['213', 'DZ', 'DZA'], // Algeria\n\t['212', 'MA', 'MAR'], // Morocco\n\t['212', 'EH', 'ESH'], // Western Sahara\n\t['211', 'SS', 'SSD'], // South Sudan\n\t['98', 'IR', 'IRN'], // Iran\n\t['95', 'MM', 'MMR'], // Myanmar\n\t['94', 'LK', 'LKA'], // Sri Lanka\n\t['93', 'AF', 'AFG'], // Afghanistan\n\t['92', 'PK', 'PAK'], // Pakistan\n\t['91', 'IN', 'IND'], // India\n\t['90', 'TR', 'TUR'], // Turkey\n\t['86', 'CN', 'CHN'], // China\n\t['84', 'VN', 'VNM'], // Vietnam\n\t['82', 'KR', 'KOR'], // South Korea\n\t['81', 'JP', 'JPN'], // Japan\n\t['66', 'TH', 'THA'], // Thailand\n\t['65', 'SG', 'SGP'], // Singapore\n\t['64', 'NZ', 'NZL'], // New Zealand\n\t['64', 'PN', 'PCN'], // Pitcairn\n\t['63', 'PH', 'PHL'], // Philippines\n\t['62', 'ID', 'IDN'], // Indonesia\n\t['61', 'CX', 'CXR'], // Christmas Island\n\t['61', 'CC', 'CCK'], // Cocos Islands\n\t['61', 'AU', 'AUS'], // Australia\n\t['60', 'MY', 'MYS'], // Malaysia\n\t['58', 'VE', 'VEN'], // Venezuela\n\t['57', 'CO', 'COL'], // Colombia\n\t['56', 'CL', 'CHL'], // Chile\n\t['55', 'BR', 'BRA'], // Brazil\n\t['54', 'AR', 'ARG'], // Argentina\n\t['53', 'CU', 'CUB'], // Cuba\n\t['52', 'MX', 'MEX'], // Mexico\n\t['51', 'PE', 'PER'], // Peru\n\t['49', 'DE', 'DEU'], // Germany\n\t['48', 'PL', 'POL'], // Poland\n\t['47', 'SJ', 'SJM'], // Svalbard and Jan Mayen\n\t['47', 'NO', 'NOR'], // Norway\n\t['46', 'SE', 'SWE'], // Sweden\n\t['45', 'DK', 'DNK'], // Denmark\n\t['44', 'GB', 'GBR'], // United Kingdom\n\t['43', 'AT', 'AUT'], // Austria\n\t['41', 'CH', 'CHE'], // Switzerland\n\t['40', 'RO', 'ROU'], // Romania\n\t['39', 'IT', 'ITA'], // Italy\n\t['36', 'HU', 'HUN'], // Hungary\n\t['34', 'ES', 'ESP'], // Spain\n\t['33', 'FR', 'FRA'], // France\n\t['32', 'BE', 'BEL'], // Belgium\n\t['31', 'NL', 'NLD'], // Netherlands\n\t['30', 'GR', 'GRC'], // Greece\n\t['27', 'ZA', 'ZAF'], // South Africa\n\t['20', 'EG', 'EGY'], // Egypt\n\t['7', 'RU', 'RUS'], // Russia\n\t['7', 'KZ', 'KAZ'], // Kazakhstan\n\t['1', 'US', 'USA'], // United States\n\t['1', 'CA', 'CAN'] // Canada\n]\n\n// This data was requested for making an international\n// phone number input with country selector.\n//\n// https://github.com/halt-hammerzeit/react-phone-number-input/pull/1\n//\n// data.split('\\n').map(row =>\n// {\n// \tconst digit_index = row.search(/\\d/)\n// \tconst country_name = row.slice(0, digit_index).trim()\n//\n// \trow = row.slice(digit_index)\n//\n// \tconst letter_index = row.search(/[A-z]/)\n// \tconst phone_codes = row.slice(0, letter_index).trim()\n// \t\t.split(', ')\n// \t\t.map(code => code.replace(/[^0-9](.*)/g, ''))\n//\n// \trow = row.slice(letter_index)\n//\n// \tconst parts = row.split(/\\s/)\n//\n// \trow =\n// \t{\n// \t\tcountry      : parts[0],\n// \t\tcountry_3    : parts[2],\n// \t\tcodes        : phone_codes,\n// \t\tcountry_name : country_name\n// \t}\n//\n// \treturn row\n// })\n// .reduce((total, row) =>\n// {\n// \treturn total.concat(row.codes.map(code =>\n// \t({\n// \t\tcode,\n// \t\tcountry      : row.country,\n// \t\tcountry_3    : row.country_3,\n// \t\tcountry_name : row.country_name\n// \t})))\n// },\n// [])\n// .sort((a, b) => a.country.localeCompare(b.country))\n// .map(row => `\\t['${row.country}', '${row.country_3}', '${row.code}'], // ${row.country_name}`)\n// .join('\\n')\n//\nexport const country_codes =\n[\n\t['AD', 'AND', '376'], // Andorra\n\t['AE', 'ARE', '971'], // United Arab Emirates\n\t['AF', 'AFG', '93'], // Afghanistan\n\t['AG', 'ATG', '1'], // Antigua and Barbuda\n\t['AI', 'AIA', '1'], // Anguilla\n\t['AL', 'ALB', '355'], // Albania\n\t['AM', 'ARM', '374'], // Armenia\n\t['AN', 'ANT', '599'], // Netherlands Antilles\n\t['AO', 'AGO', '244'], // Angola\n\t['AQ', 'ATA', '672'], // Antarctica\n\t['AR', 'ARG', '54'], // Argentina\n\t['AS', 'ASM', '1'], // American Samoa\n\t['AT', 'AUT', '43'], // Austria\n\t['AU', 'AUS', '61'], // Australia\n\t['AW', 'ABW', '297'], // Aruba\n\t['AZ', 'AZE', '994'], // Azerbaijan\n\t['BA', 'BIH', '387'], // Bosnia and Herzegovina\n\t['BB', 'BRB', '1'], // Barbados\n\t['BD', 'BGD', '880'], // Bangladesh\n\t['BE', 'BEL', '32'], // Belgium\n\t['BF', 'BFA', '226'], // Burkina Faso\n\t['BG', 'BGR', '359'], // Bulgaria\n\t['BH', 'BHR', '973'], // Bahrain\n\t['BI', 'BDI', '257'], // Burundi\n\t['BJ', 'BEN', '229'], // Benin\n\t['BL', 'BLM', '590'], // Saint Barthelemy\n\t['BM', 'BMU', '1'], // Bermuda\n\t['BN', 'BRN', '673'], // Brunei\n\t['BO', 'BOL', '591'], // Bolivia\n\t['BR', 'BRA', '55'], // Brazil\n\t['BS', 'BHS', '1'], // Bahamas\n\t['BT', 'BTN', '975'], // Bhutan\n\t['BW', 'BWA', '267'], // Botswana\n\t['BY', 'BLR', '375'], // Belarus\n\t['BZ', 'BLZ', '501'], // Belize\n\t['CA', 'CAN', '1'], // Canada\n\t['CC', 'CCK', '61'], // Cocos Islands\n\t['CD', 'COD', '243'], // Democratic Republic of the Congo\n\t['CF', 'CAF', '236'], // Central African Republic\n\t['CG', 'COG', '242'], // Republic of the Congo\n\t['CH', 'CHE', '41'], // Switzerland\n\t['CI', 'CIV', '225'], // Ivory Coast\n\t['CK', 'COK', '682'], // Cook Islands\n\t['CL', 'CHL', '56'], // Chile\n\t['CM', 'CMR', '237'], // Cameroon\n\t['CN', 'CHN', '86'], // China\n\t['CO', 'COL', '57'], // Colombia\n\t['CR', 'CRI', '506'], // Costa Rica\n\t['CU', 'CUB', '53'], // Cuba\n\t['CV', 'CPV', '238'], // Cape Verde\n\t['CW', 'CUW', '599'], // Curacao\n\t['CX', 'CXR', '61'], // Christmas Island\n\t['CY', 'CYP', '357'], // Cyprus\n\t['CZ', 'CZE', '420'], // Czech Republic\n\t['DE', 'DEU', '49'], // Germany\n\t['DJ', 'DJI', '253'], // Djibouti\n\t['DK', 'DNK', '45'], // Denmark\n\t['DM', 'DMA', '1'], // Dominica\n\t['DO', 'DOM', '1'], // Dominican Republic\n\t['DO', 'DOM', '1'], // Dominican Republic\n\t['DO', 'DOM', '1'], // Dominican Republic\n\t['DZ', 'DZA', '213'], // Algeria\n\t['EC', 'ECU', '593'], // Ecuador\n\t['EE', 'EST', '372'], // Estonia\n\t['EG', 'EGY', '20'], // Egypt\n\t['EH', 'ESH', '212'], // Western Sahara\n\t['ER', 'ERI', '291'], // Eritrea\n\t['ES', 'ESP', '34'], // Spain\n\t['ET', 'ETH', '251'], // Ethiopia\n\t['FI', 'FIN', '358'], // Finland\n\t['FJ', 'FJI', '679'], // Fiji\n\t['FK', 'FLK', '500'], // Falkland Islands\n\t['FM', 'FSM', '691'], // Micronesia\n\t['FO', 'FRO', '298'], // Faroe Islands\n\t['FR', 'FRA', '33'], // France\n\t['GA', 'GAB', '241'], // Gabon\n\t['GB', 'GBR', '44'], // United Kingdom\n\t['GD', 'GRD', '1'], // Grenada\n\t['GE', 'GEO', '995'], // Georgia\n\t['GG', 'GGY', '44'], // Guernsey\n\t['GH', 'GHA', '233'], // Ghana\n\t['GI', 'GIB', '350'], // Gibraltar\n\t['GL', 'GRL', '299'], // Greenland\n\t['GM', 'GMB', '220'], // Gambia\n\t['GN', 'GIN', '224'], // Guinea\n\t['GQ', 'GNQ', '240'], // Equatorial Guinea\n\t['GR', 'GRC', '30'], // Greece\n\t['GT', 'GTM', '502'], // Guatemala\n\t['GU', 'GUM', '1'], // Guam\n\t['GW', 'GNB', '245'], // Guinea-Bissau\n\t['GY', 'GUY', '592'], // Guyana\n\t['HK', 'HKG', '852'], // Hong Kong\n\t['HN', 'HND', '504'], // Honduras\n\t['HR', 'HRV', '385'], // Croatia\n\t['HT', 'HTI', '509'], // Haiti\n\t['HU', 'HUN', '36'], // Hungary\n\t['ID', 'IDN', '62'], // Indonesia\n\t['IE', 'IRL', '353'], // Ireland\n\t['IL', 'ISR', '972'], // Israel\n\t['IM', 'IMN', '44'], // Isle of Man\n\t['IN', 'IND', '91'], // India\n\t['IO', 'IOT', '246'], // British Indian Ocean Territory\n\t['IQ', 'IRQ', '964'], // Iraq\n\t['IR', 'IRN', '98'], // Iran\n\t['IS', 'ISL', '354'], // Iceland\n\t['IT', 'ITA', '39'], // Italy\n\t['JE', 'JEY', '44'], // Jersey\n\t['JM', 'JAM', '1'], // Jamaica\n\t['JO', 'JOR', '962'], // Jordan\n\t['JP', 'JPN', '81'], // Japan\n\t['KE', 'KEN', '254'], // Kenya\n\t['KG', 'KGZ', '996'], // Kyrgyzstan\n\t['KH', 'KHM', '855'], // Cambodia\n\t['KI', 'KIR', '686'], // Kiribati\n\t['KM', 'COM', '269'], // Comoros\n\t['KN', 'KNA', '1'], // Saint Kitts and Nevis\n\t['KP', 'PRK', '850'], // North Korea\n\t['KR', 'KOR', '82'], // South Korea\n\t['KW', 'KWT', '965'], // Kuwait\n\t['KY', 'CYM', '1'], // Cayman Islands\n\t['KZ', 'KAZ', '7'], // Kazakhstan\n\t['LA', 'LAO', '856'], // Laos\n\t['LB', 'LBN', '961'], // Lebanon\n\t['LC', 'LCA', '1'], // Saint Lucia\n\t['LI', 'LIE', '423'], // Liechtenstein\n\t['LK', 'LKA', '94'], // Sri Lanka\n\t['LR', 'LBR', '231'], // Liberia\n\t['LS', 'LSO', '266'], // Lesotho\n\t['LT', 'LTU', '370'], // Lithuania\n\t['LU', 'LUX', '352'], // Luxembourg\n\t['LV', 'LVA', '371'], // Latvia\n\t['LY', 'LBY', '218'], // Libya\n\t['MA', 'MAR', '212'], // Morocco\n\t['MC', 'MCO', '377'], // Monaco\n\t['MD', 'MDA', '373'], // Moldova\n\t['ME', 'MNE', '382'], // Montenegro\n\t['MF', 'MAF', '590'], // Saint Martin\n\t['MG', 'MDG', '261'], // Madagascar\n\t['MH', 'MHL', '692'], // Marshall Islands\n\t['MK', 'MKD', '389'], // Macedonia\n\t['ML', 'MLI', '223'], // Mali\n\t['MM', 'MMR', '95'], // Myanmar\n\t['MN', 'MNG', '976'], // Mongolia\n\t['MO', 'MAC', '853'], // Macau\n\t['MP', 'MNP', '1'], // Northern Mariana Islands\n\t['MR', 'MRT', '222'], // Mauritania\n\t['MS', 'MSR', '1'], // Montserrat\n\t['MT', 'MLT', '356'], // Malta\n\t['MU', 'MUS', '230'], // Mauritius\n\t['MV', 'MDV', '960'], // Maldives\n\t['MW', 'MWI', '265'], // Malawi\n\t['MX', 'MEX', '52'], // Mexico\n\t['MY', 'MYS', '60'], // Malaysia\n\t['MZ', 'MOZ', '258'], // Mozambique\n\t['NA', 'NAM', '264'], // Namibia\n\t['NC', 'NCL', '687'], // New Caledonia\n\t['NE', 'NER', '227'], // Niger\n\t['NG', 'NGA', '234'], // Nigeria\n\t['NI', 'NIC', '505'], // Nicaragua\n\t['NL', 'NLD', '31'], // Netherlands\n\t['NO', 'NOR', '47'], // Norway\n\t['NP', 'NPL', '977'], // Nepal\n\t['NR', 'NRU', '674'], // Nauru\n\t['NU', 'NIU', '683'], // Niue\n\t['NZ', 'NZL', '64'], // New Zealand\n\t['OM', 'OMN', '968'], // Oman\n\t['PA', 'PAN', '507'], // Panama\n\t['PE', 'PER', '51'], // Peru\n\t['PF', 'PYF', '689'], // French Polynesia\n\t['PG', 'PNG', '675'], // Papua New Guinea\n\t['PH', 'PHL', '63'], // Philippines\n\t['PK', 'PAK', '92'], // Pakistan\n\t['PL', 'POL', '48'], // Poland\n\t['PM', 'SPM', '508'], // Saint Pierre and Miquelon\n\t['PN', 'PCN', '64'], // Pitcairn\n\t['PR', 'PRI', '1'], // Puerto Rico\n\t['PR', 'PRI', '1'], // Puerto Rico\n\t['PS', 'PSE', '970'], // Palestine\n\t['PT', 'PRT', '351'], // Portugal\n\t['PW', 'PLW', '680'], // Palau\n\t['PY', 'PRY', '595'], // Paraguay\n\t['QA', 'QAT', '974'], // Qatar\n\t['RE', 'REU', '262'], // Reunion\n\t['RO', 'ROU', '40'], // Romania\n\t['RS', 'SRB', '381'], // Serbia\n\t['RU', 'RUS', '7'], // Russia\n\t['RW', 'RWA', '250'], // Rwanda\n\t['SA', 'SAU', '966'], // Saudi Arabia\n\t['SB', 'SLB', '677'], // Solomon Islands\n\t['SC', 'SYC', '248'], // Seychelles\n\t['SD', 'SDN', '249'], // Sudan\n\t['SE', 'SWE', '46'], // Sweden\n\t['SG', 'SGP', '65'], // Singapore\n\t['SH', 'SHN', '290'], // Saint Helena\n\t['SI', 'SVN', '386'], // Slovenia\n\t['SJ', 'SJM', '47'], // Svalbard and Jan Mayen\n\t['SK', 'SVK', '421'], // Slovakia\n\t['SL', 'SLE', '232'], // Sierra Leone\n\t['SM', 'SMR', '378'], // San Marino\n\t['SN', 'SEN', '221'], // Senegal\n\t['SO', 'SOM', '252'], // Somalia\n\t['SR', 'SUR', '597'], // Suriname\n\t['SS', 'SSD', '211'], // South Sudan\n\t['ST', 'STP', '239'], // Sao Tome and Principe\n\t['SV', 'SLV', '503'], // El Salvador\n\t['SX', 'SXM', '1'], // Sint Maarten\n\t['SY', 'SYR', '963'], // Syria\n\t['SZ', 'SWZ', '268'], // Swaziland\n\t['TC', 'TCA', '1'], // Turks and Caicos Islands\n\t['TD', 'TCD', '235'], // Chad\n\t['TG', 'TGO', '228'], // Togo\n\t['TH', 'THA', '66'], // Thailand\n\t['TJ', 'TJK', '992'], // Tajikistan\n\t['TK', 'TKL', '690'], // Tokelau\n\t['TL', 'TLS', '670'], // East Timor\n\t['TM', 'TKM', '993'], // Turkmenistan\n\t['TN', 'TUN', '216'], // Tunisia\n\t['TO', 'TON', '676'], // Tonga\n\t['TR', 'TUR', '90'], // Turkey\n\t['TT', 'TTO', '1'], // Trinidad and Tobago\n\t['TV', 'TUV', '688'], // Tuvalu\n\t['TW', 'TWN', '886'], // Taiwan\n\t['TZ', 'TZA', '255'], // Tanzania\n\t['UA', 'UKR', '380'], // Ukraine\n\t['UG', 'UGA', '256'], // Uganda\n\t['US', 'USA', '1'], // United States\n\t['UY', 'URY', '598'], // Uruguay\n\t['UZ', 'UZB', '998'], // Uzbekistan\n\t['VA', 'VAT', '379'], // Vatican\n\t['VC', 'VCT', '1'], // Saint Vincent and the Grenadines\n\t['VE', 'VEN', '58'], // Venezuela\n\t['VG', 'VGB', '1'], // British Virgin Islands\n\t['VI', 'VIR', '1'], // U.S. Virgin Islands\n\t['VN', 'VNM', '84'], // Vietnam\n\t['VU', 'VUT', '678'], // Vanuatu\n\t['WF', 'WLF', '681'], // Wallis and Futuna\n\t['WS', 'WSM', '685'], // Samoa\n\t['XK', 'XKX', '383'], // Kosovo\n\t['YE', 'YEM', '967'], // Yemen\n\t['YT', 'MYT', '262'], // Mayotte\n\t['ZA', 'ZAF', '27'], // South Africa\n\t['ZM', 'ZMB', '260'], // Zambia\n\t['ZW', 'ZWE', '263'] // Zimbabwe\"\n]\n\n// Derives an ISO 3166-1 country code\n// from a plaintext international phone number.\n//\n// E.g. '+79991234567' -> 'RU'\n//      '+19991234567' -> 'US'\n//     '+447700900431' -> 'UK'\n//\nexport default function country(phone)\n{\n\t// Sanity check\n\tif (!phone)\n\t{\n\t\treturn\n\t}\n\n\t// Must be an international plaintext phone number\n\tif (phone[0] !== '+')\n\t{\n\t\treturn\n\t}\n\n\t// Trim the '+' sign\n\tphone = phone.slice('+'.length)\n\n\t// Find the longest matching prefix\n\tfor (let country_phone_prefix of country_phone_prefixes)\n\t{\n\t\tif (starts_with(phone, country_phone_prefix[0]))\n\t\t{\n\t\t\t// This country code is most likely (like 99.99999999% likely)\n\t\t\t// the country code intended for this\n\t\t\t// currently possibly incomplete phone number,\n\t\t\t// so don't look for possible future ambiguity,\n\t\t\t// and just return this country code.\n\t\t\t// (see the note in the beginning of this file)\n\t\t\treturn country_phone_prefix[1]\n\t\t}\n\t}\n}\n\n// Derives an ISO 3166-1 country code from locale.\n// Locale format: [language[_territory][.codeset][@modifier]]\n//\n// E.g. \"ru-RU\"       -> \"RU\"\n//      \"zh-Hans-HK\"  -> \"HK\"\n//      \"en\"          -> `undefined`\n//\nexport function country_from_locale(locale)\n{\n\t// Sanity check\n\tif (!locale)\n\t{\n\t\treturn\n\t}\n\n\tconst last_dash_index = locale.lastIndexOf('-')\n\tif (last_dash_index <= 0)\n\t{\n\t\treturn\n\t}\n\n\treturn locale.slice(last_dash_index + 1)\n}"]}