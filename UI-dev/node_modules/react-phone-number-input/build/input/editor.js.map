{"version":3,"sources":["../../source/input/editor.js"],"names":["edit","value","caret_position","format","operation","selection","options","substring","end","digits","digit_index","previous_digit_index"],"mappings":";;;;;kBAmBwBA,I;;AAnBxB;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,SAASA,IAAT,CAAcC,KAAd,EAAqBC,cAArB,EAAqCC,MAArC,EAA6CC,SAA7C,EAAwDC,SAAxD,EACf;AAAA,KADkFC,OAClF,uEAD4F,EAC5F;;AACC;AACA;AACA,KAAID,cAAcD,cAAc,WAAd,IAA6BA,cAAc,QAAzD,CAAJ,EACA;AACCH,UAAQA,MAAMM,SAAN,CAAgB,CAAhB,EAAmBL,cAAnB,IAAqCD,MAAMM,SAAN,CAAgBF,UAAUG,GAA1B,CAA7C;AACA,SAAO,sBAAMP,KAAN,EAAaC,cAAb,EAA6BC,MAA7B,EAAqCG,OAArC,CAAP;AACA;;AAPF,cAS+B,sBAAML,KAAN,EAAaC,cAAb,EAA6BC,MAA7B,EAAqCG,OAArC,CAT/B;AAAA,KASOG,MATP,UASOA,MATP;AAAA,KASeC,WATf,UASeA,WATf;;AAWC;;;AACA,SAAQN,SAAR;AAEC,OAAK,WAAL;AACC;AACA;AACA,OAAMO,uBAAuBD,cAAc,CAA3C;;AAEA;AACA;AACA,OAAIC,wBAAwB,CAA5B,EACA;AACC;AACAF,aAASA,OAAOF,SAAP,CAAiB,CAAjB,EAAoBI,oBAApB,IAA4CF,OAAOF,SAAP,CAAiBG,WAAjB,CAArD;AACA;AACAA,kBAAcC,oBAAd;AACA;;AAED;;AAED,OAAK,QAAL;AACC;AACAF,YAASA,OAAOF,SAAP,CAAiB,CAAjB,EAAoBG,WAApB,IAAmCD,OAAOF,SAAP,CAAiBG,cAAc,CAA/B,CAA5C;AACA;AAtBF;;AAyBA,QAAO,EAAED,cAAF,EAAUC,wBAAV,EAAP;AACA","file":"editor.js","sourcesContent":["import parse from './parser'\n\n// Edits <input/>ted value according to the input conditions (caret position, key pressed).\n//\n// value          - '  999) 123 45 -67'\n// caret_position - 5 // starting from 0\n//\n// options:\n// {\n// \toperation: 'Delete',\n// \tselection: { end: 456 } // `end` specifies the index of the character after the selection\n// }\n//\n// Returns\n// {\n// \tphone: '(999) 123-45'\n// \tcaret: 12 // starting from 0\n// }\n//\nexport default function edit(value, caret_position, format, operation, selection, options = {})\n{\n\t// If selection is being erased, then simply erase it.\n\t// (and prefer \"Delete\" over \"Backspace\")\n\tif (selection && (operation === 'Backspace' || operation === 'Delete'))\n\t{\n\t\tvalue = value.substring(0, caret_position) + value.substring(selection.end)\n\t\treturn parse(value, caret_position, format, options)\n\t}\n\n\tlet { digits, digit_index } = parse(value, caret_position, format, options)\n\n\t// Adjust caret position\n\tswitch (operation)\n\t{\n\t\tcase 'Backspace':\n\t\t\t// Find the previous (the one being erased) digit index\n\t\t\t// inside a valid phone number.\n\t\t\tconst previous_digit_index = digit_index - 1\n\n\t\t\t// If there is previous digit,\n\t\t\t// then erase it and reposition the caret.\n\t\t\tif (previous_digit_index >= 0)\n\t\t\t{\n\t\t\t\t// Remove the previous digit\n\t\t\t\tdigits = digits.substring(0, previous_digit_index) + digits.substring(digit_index)\n\t\t\t\t// Position the caret where the previous (erased) digit was\n\t\t\t\tdigit_index = previous_digit_index\n\t\t\t}\n\n\t\t\tbreak\n\n\t\tcase 'Delete':\n\t\t\t// Remove current digit\n\t\t\tdigits = digits.substring(0, digit_index) + digits.substring(digit_index + 1)\n\t\t\tbreak\n\t}\n\n\treturn { digits, digit_index }\n}"]}