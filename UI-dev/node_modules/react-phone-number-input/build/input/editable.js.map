{"version":3,"sources":["../../source/input/editable.js"],"names":["edit_and_format","edit_and_parse","parse_value","format_value","operation","input_text","phone_number_format","caret_position","selection","options","digits","digit_index","has_trunk_prefix","_digits","substring","country","length","_digit_index","international","phone","caret","undefined","value","format","with_trunk_prefix"],"mappings":"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","file":"editable.js","sourcesContent":["import\n{\n\tformat_local,\n\tformat_international,\n\tderive_phone_number_format,\n\tparse_plaintext_international,\n\tparse_digits\n}\nfrom '../phone'\n\nimport parse from './parser'\nimport format from './formatter'\nimport edit from './editor'\n\n// Apply the pending operation to the <input/> textual value (if any),\n// and then format the <input/> textual value as a phone number\n// (and reposition the caret position accordingly)\nexport function edit_and_format(operation, input_text, phone_number_format, caret_position, selection, options)\n{\n\tconst { digits, digit_index } = edit_and_parse\n\t(\n\t\toperation,\n\t\tinput_text,\n\t\tphone_number_format,\n\t\tcaret_position,\n\t\tselection,\n\t\toptions\n\t)\n\n\t// If a specific phone number format is set,\n\t// then format the digits as a local phone number.\n\tif (phone_number_format)\n\t{\n\t\treturn format(digits, digit_index, phone_number_format, { has_trunk_prefix: false })\n\t}\n\n\t// If no strictly set `format` supplied,\n\t// try to infer it from the <input/> textual value entered.\n\tif (!phone_number_format)\n\t{\n\t\tphone_number_format = derive_phone_number_format('+' + digits)\n\t}\n\n\t// If no specific `format` is set,\n\t// but a phone format was derived from the entered digits,\n\t// then format the digits as an international phone number.\n\tif (phone_number_format)\n\t{\n\t\t// Cut off country code\n\t\tconst _digits = digits.substring(phone_number_format.country.length)\n\t\t// And adjust `digit_index` accordingly\n\t\tconst _digit_index = digit_index - phone_number_format.country.length\n\n\t\tlet { phone, caret } = format(_digits, _digit_index, phone_number_format, { has_trunk_prefix: false, international: true })\n\n\t\t// If the `digit_index` was negative\n\t\t// (belonged to the country code)\n\t\t// then stand the caret on that country code digit.\n\t\tif (caret === undefined)\n\t\t{\n\t\t\tcaret = digit_index\n\t\t}\n\n\t\treturn { phone, caret }\n\t}\n\n\t// No phone number formatting\n\treturn format(digits, digit_index)\n}\n\nexport function edit_and_parse(operation, value, format, caret, selection, options)\n{\n\t// If needs to modify the value\n\t// (i.e. Backspace or Delete was intercepted)\n\tif (operation)\n\t{\n\t\t// Edit <input/>ted value according to the input conditions (caret position, key pressed)\n\t\treturn edit(value, caret, format, operation, selection, options)\n\t}\n\n\treturn parse(value, caret, format, options)\n}\n\n// Parses the <input/> textual value\n// into a plaintext international value\nexport function parse_value(input_text, format)\n{\n\t// If a strict `format` is specified,\n\t// then limit the digits accordingly.\n\tif (format)\n\t{\n\t\tconst has_trunk_prefix = false\n\t\treturn parse_plaintext_international(input_text, format, has_trunk_prefix)\n\t}\n\n\t// Otherwise just take all the digits\n\t// prepending a plus sign.\n\n\tconst digits = parse_digits(input_text)\n\n\tif (!digits)\n\t{\n\t\treturn\n\t}\n\n\treturn '+' + digits\n}\n\n// Formats `value` (which is plaintext international)\n// into an <input/> textual value.\nexport function format_value(value, format)\n{\n\tconst with_trunk_prefix = false\n\n\t// If a specific phone number `format` is specified, then use it.\n\tif (format)\n\t{\n\t\t// \"+79991234567\" -> \"(999) 123-45-67\"\n\t\treturn format_local(value, format, with_trunk_prefix)\n\t}\n\n\t// Otherwise, try to infer phone number format\n\t// from the international number being entered.\n\tformat = derive_phone_number_format(value)\n\n\t// If the phone number format was derived, then use it.\n\tif (format)\n\t{\n\t\t// \"+79991234567\" -> \"+7 999 123 45 67\" -> \"7 999 123 45 67\"\n\t\treturn format_international(value, format).substring('+'.length)\n\t}\n\n\t// Otherwise don't format the value for output.\n\t// Just trim the plus character.\n\t// \"+12345678\" -> \"12345678\"\n\n\tif (!value)\n\t{\n\t\treturn ''\n\t}\n\n\treturn value.substring('+'.length)\n}"]}