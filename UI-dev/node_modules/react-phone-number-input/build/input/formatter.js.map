{"version":3,"sources":["../../source/input/formatter.js"],"names":["format","get_caret_position_for_digit","digits","digit_index","options","result","phone","caret","international","substring","has_trunk_prefix","caret_position","country","length","undefined"],"mappings":";;;;;kBA6BwBA,M;QA8CRC,4B,GAAAA,4B;;AA3EhB;;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,SAASD,MAAT,CAAgBE,MAAhB,EAAwBC,WAAxB,EAAqCH,MAArC,EACf;AAAA,KAD4DI,OAC5D,uEADsE,EACtE;;AACC,KAAI,CAACJ,MAAL,EACA;AACC,MAAMK,UACN;AACCC,UAAOJ,MADR;AAECK,UAAOJ;AAFR,GADA;;AAMA,SAAOE,OAAP;AACA;;AAED,KAAMC,QAAQF,QAAQI,aAAR,GAAwB,iCAAqBN,MAArB,EAA6BF,MAA7B,EAAqCS,SAArC,CAA+C,CAA/C,CAAxB,GAA4E,yBAAaP,MAAb,EAAqBF,MAArB,EAA6BI,QAAQM,gBAArC,CAA1F;;AAEA,KAAIC,iBAAiBV,6BAA6BE,WAA7B,EAA0CH,MAA1C,EAAkDE,MAAlD,EAA0DE,OAA1D,CAArB;;AAEA;AACA;AACA,KAAIA,QAAQI,aAAZ,EACA;AACCG,oBAAkBX,OAAOY,OAAP,CAAeC,MAAjC;;AAEA,MAAIX,MAAJ,EACA;AACCS;AACA;AACD;;AAED;AACA,KAAIA,iBAAiBL,MAAMO,MAA3B,EACA;AACCF,mBAAiBL,MAAMO,MAAvB;AACA;;AAED,KAAMR,SACN;AACCC,cADD;AAECC,SAAOI;AAFR,EADA;;AAMA,QAAON,MAAP;AACA;;AAED;AACA;AACO,SAASJ,4BAAT,CAAsCE,WAAtC,EAAmDH,MAAnD,EAA2DE,MAA3D,EACP;AAAA,KAD0EE,OAC1E,uEADoF,EACpF;;AACC;AACA,KAAID,cAAc,CAAlB,EACA;AACC;AACA;;AAED,KAAID,OAAOW,MAAP,KAAkB,CAAtB,EACA;AACC,SAAO,CAAP;AACA;;AAED,KAAIF,iBAAiB,8BAAkBR,WAAlB,EAA+BH,MAA/B,EAAuCE,MAAvC,EAA+CE,QAAQM,gBAAvD,EAAyEN,QAAQI,aAAjF,CAArB;;AAEA;AACA;AACA,KAAIG,mBAAmBG,SAAvB,EACA;AACCH,mBAAiB,8BAAkB,kDAAsCX,MAAtC,EAA8CE,MAA9C,EAAsDE,QAAQM,gBAA9D,IAAkF,CAApG,EAAuGV,MAAvG,EAA+GE,MAA/G,EAAuHE,QAAQM,gBAA/H,EAAiJN,QAAQI,aAAzJ,IAA0K,CAA3L;AACA;;AAED,QAAOG,cAAP;AACA","file":"formatter.js","sourcesContent":["import\n{\n\tparse_digits,\n\tlocal_phone_digits as phone_digits,\n\tformat_local,\n\tformat_international,\n\tindex_in_template,\n\tdigits_in_local_phone_number_template\n}\nfrom '../phone'\n\n// Formats phone number and repositions the caret if neccessary.\n//\n// value          - '  999) 123 45 -67'\n// caret_position - 5 // starting from 0\n// format         - { country: ..., template: ... }\n//\n// options:\n// {\n// \tinternational: false // If set to `true` then it will format the phone as an international one (including country code)\n//    has_trunk_prefix: false // If set to `true` then it will include trunk prefix\n// }\n//\n// Returns\n// {\n// \tphone: '(999) 123-45'\n// \tcaret: 12 // starting from 0\n// }\n//\nexport default function format(digits, digit_index, format, options = {})\n{\n\tif (!format)\n\t{\n\t\tconst result =\n\t\t{\n\t\t\tphone: digits,\n\t\t\tcaret: digit_index\n\t\t}\n\n\t\treturn result\n\t}\n\n\tconst phone = options.international ? format_international(digits, format).substring(1) : format_local(digits, format, options.has_trunk_prefix)\n\n\tlet caret_position = get_caret_position_for_digit(digit_index, format, digits, options)\n\n\t// If the digits are formatted as an international phone number,\n\t// adjust the caret position for the country code and (possibly) a spacebar.\n\tif (options.international)\n\t{\n\t\tcaret_position += format.country.length\n\n\t\tif (digits)\n\t\t{\n\t\t\tcaret_position++\n\t\t}\n\t}\n\n\t// In case of \"next digit\" being too far\n\tif (caret_position > phone.length)\n\t{\n\t\tcaret_position = phone.length\n\t}\n\n\tconst result =\n\t{\n\t\tphone,\n\t\tcaret: caret_position\n\t}\n\n\treturn result\n}\n\n// Calculates caret position for digit index\n// (not character index) in a phone number of a given format\nexport function get_caret_position_for_digit(digit_index, format, digits, options = {})\n{\n\t// Sanity check\n\tif (digit_index < 0)\n\t{\n\t\treturn\n\t}\n\n\tif (digits.length === 0)\n\t{\n\t\treturn 0\n\t}\n\n\tlet caret_position = index_in_template(digit_index, format, digits, options.has_trunk_prefix, options.international)\n\n\t// If the `digit_index` exceeds the available `digits`,\n\t// then position the caret after the last digit.\n\tif (caret_position === undefined)\n\t{\n\t\tcaret_position = index_in_template(digits_in_local_phone_number_template(format, digits, options.has_trunk_prefix) - 1, format, digits, options.has_trunk_prefix, options.international) + 1\n\t}\n\n\treturn caret_position\n}"]}